Normal Flow
position: static

 In normal flow, each block-level 
element sits on top of the next 
one. Since this is the default 
way in which browsers treat 
HTML elements, you do not 
need a CSS property to indicate 
that elements should appear 
in normal flow, but the syntax 
would be:

 position: static; 

 Relative Positioning:
 position: relative

  p.example {
 position: relative;
 top: 10px;
 left: 100px;}

Relative positioning moves an element in relation to where it 
would have been in normal flow.

For example, you can move it 10 pixels lower than it would have 
been in normal flow or 20% to the right.
You can indicate that an element should be relatively positioned using the position property 
with a value of relative.

You then use the offset properties (top or bottom and 
left or right) to indicate how far to move the element from 
where it would have been in normal flow.

Absolute Positioning:
position: absolute

When the position property 
is given a value of absolute, 
the box is taken out of normal 
flow and no longer affects the 
position of other elements on 
the page. (They act like it is not 
there.) 

The box offset properties (top 
or bottom and left or right) 
specify where the element 
should appear in relation to its 
containing element.

 In this example, the heading has 
been positioned at the top of the 
page and 500 pixels from its left 
edge. The width of the heading is 
set to be 250 pixels wide.

 h1 {
 position: absolute;
 top: 0px;
 left: 500px;
 width: 250px;}
 p {
 width: 450px;}

Fixed Positioning
position: fixed

Fixed positioning is a type 
of absolute positioning that 
requires the position property 
to have a value of fixed.

It positions the element in 
relation to the browser window. 
Therefore, when a user scrolls 
down the page, it stays in the 
exact same place.

h1 {
 position: fixed;
 top: 0px;
 left: 50px;
 padding: 10px;
 margin: 0px;
 width: 100%;
 background-color: #efefef;}
 p.example {
 margin-top: 100px;}

 Overlapping elements:
 z-index

 h1 {
 position: fixed;
 top: 0px;
 left: 0px;
 margin: 0px;
 padding: 10px;
 width: 100%;
 background-color: #efefef;
 z-index: 10;}
 p {
 position: relative;
 top: 70px;
 left: 70px;}

When boxes overlap if you want to control which element sits on top, you can use the z-index property.
Its value is a number, and the higher the number the closer that element 
is to the front. 
For example, an element with a z-index of 10 will appear over the top of one 
with a z-index of 5.

Floating Elements 
float


The float property allows you 
to take an element in normal 
flow and place it as far to the 
left or right of the containing 
element as possible.

Anything else that sits inside 
the containing element will 
flow around the element that is 
floated.

In this example, a <blockquote> element is 
used to hold a quotation. It's containing element is the <body> element.

The <blockquote> element is floated to the right, and the 
paragraphs that follow the quote flow around the floated element.

blockquote {
    float: right;
    width: 275px;
    font-size: 130%;
    font-style: italic;
    font-family: Georgia, Times, serif;
    margin: 0px 0px 10px 10px;
    padding: 10px;
    border-top: 1px solid #665544;
    border-bottom: 1px solid #665544;}